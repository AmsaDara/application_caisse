{"version":3,"sources":["classes/Caisse.ts","classes/SoldeView.ts","classes/Transaction.ts","classes/TransactionCompte.ts","classes/TransactionList.ts","classes/transactionParUserView.ts","app.ts"],"names":[],"mappings":";;;;;;AMAA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;ANKA,ACFA,ACHA,ACGA,ACAA,ACAA,ILEA,ACFA,ACHA,ACGA,ACAA,ACAA,MLEA,GCFA,ECHA,IEGA,CDAA,EEAA;ACFA,ANIA,ACFA,ACHA,ACGA,ACAA,ACAA,ICFA,WAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;ANIA,ACFA,ACHA,ACGA,ACAA,ACAA,YLEA,ACFA,ACHA,ACGA,ACAA,ACAA;ACDA,ANGA,ACEI,ACDA,ACEA,ACFA,ACCA,ICLJ,ONGA,ACEI,ACDA,ACEA,ACFA,ACCA,MCLJ,ANGA,GMHA,ANGA,ACEI,ECDA,CDCA,ACAI,GEDJ,CEJJ,AHMI,CGNJ,AJII,CEAA,ACCA,CHCI,ACAJ,EEDA,KHDA,EAGI,OAHJ,EAII,GIRR,CAAA,IJII,EAIqB;AFJb,ACEJ,ACIA,ACHD,ACFC,ACCA,SLFI,ACEC,ACIA,ACHD,ACFC,ACCA,IHIL,CFNI,EEMQ,CFNS,CAAjB,EICJ,CFKA,CDJA,AIAA,CDDmB,EHCE,AIAA,GFCtB,GAA2B,ACFC,CAAC,CHCC,AIAA,CJAC,AIAA,KFCI,CAAC,KCFhB,CAAuB,CHCrB,AIAA,CJAuB,AIAA,KFClB,CAAuB,OFD5B,CAArB,GGDmB,CAAnB,GDE0B,CAA3B,EEDsB,CAArB;ACLR,ANIY,ACEP,ACIG,ACHD,ACFF,ACEA,ICPL,KNIY,AEMC,ACHD,MDGJ,GAAc,GFNV,EMJZ,CNImC,CEM3B,CIVR,ANIY,GGGL,GAA4B,CGPnC,CAAA,MHO2C,CAAC,aAAT,CAAuB,QGP1D,CAAA,OHOmC,CAA5B;AHDK,AEKJ,ACHH,SHFO,AEKC,MAAL,GFLI,AEKU,GFLgB,EAA1B,EEKJ;AIVR,ANsCC,AC9BG,ACGI,AENJ,ACGA,EJAA,AGHA,ACGA,ECRJ,KJWa,EDHT,CAAA,ICGI,CENJ,CAAA,CFMmB,CGHnB,CCRJ,ALQI,AIAA,CJAA,EKRJ,GJWQ,AENJ,CAAA,ECGA,CCRJ,ADQI,CCRJ,KLQI,GAAA,GGHA,GAAA,ACGA,GAAA,CJAgB,MAAhB,AGHgB,EHGc,CKRlC,ADQoB,CCRpB,EFKI,EAA8B,CCG9B,EAA8B;AJC1B,ACGH,ACHD,ACFI,ACEA,EFAJ,EFAI,IIAI,CDFC,EHEE,CAAC,GAAR,CAAY,EEAhB,CAAA,CCFI,ACEgB,CDFC,ECEE,KFAvB,CAAA,AEA6B,CDFzB,ACE0B,GDFE,EAA5B,SDEJ,CEAuB,EFAvB,AEAI,UFAY,IFAA,EEAhB,EAA8B,EFAd,CAA0C,MAAM,CAAC,QAAP,EAA1C,CAAZ;AKRR,ANOI,ACGI,AEAA,AEDA,ELFJ,EMPJ,INOI,AGGQ,AEDA,CLFR,ACGS,KIDK,GAAG,CLFjB,CAAA,AKEI,GJCA,CAAmB,CEAC,GAAG,CGV/B,GAAA,CLUQ,CEA6B,CAAC,CFAC,CDHnC,EMPJ,CAAA,ANOI,ECGyC,CAAC,ODHxB,AGGS,CFAQ,CEA/B,CHHJ,CCGqD,CDHrB,OCGG,EAA/B,UKVR,CAAA;ANQQ,ACGH,ACED,ACFI,ACJA,EFMJ,CDNA,KEIQ,CHHC,AIDY,CDIX,GDEV,ACFa,ACJQ,CFMrB,ACFI,CCJiB,GJCjB,AIDiB,CJCF,AIDE,EAAA,EJCjB,AEKJ,AENqB,CJCG,AEKxB,EENqB,CJCjB,IEKJ,CEN2B,CAAC,CFM5B,YAAA,EENqB,EAAjB,EAAiB,EAAA,GAAA,EAAA,CAAA,MAAjB,EAAiB,EAAA,EAAjB,EAA0C;AELlD,ANOQ,AEKA,ACFA,ACLK,IELT,ANOI,GAAG,CAAC,AGGA,EGVF,AHUI,ACLK,CFOJ,CEPM,CELR,AHUI,CAAT,CCLa,CFOD,CIZH,AFKI,CAAA,EFOb,AEPa,CAAR,EJEL,CAAoB,CMPX,CAAA,ENOT,IMPK,EAAb,CDQmB,IAAE;ACNrB,ANMK,ACEL,ACGK,AEPO,ACGD,GLJP,AEMA,CITA,KLQJ,CGJgB,ACGD,EDHG,ACGD,CCPJ,EFIQ,ACGA,CCPL,ELQhB,EKRoB,CDOO,CAAC,CDHC,CAAC,ICGT,CAAc,ECPf,CAAA,KFIC,CAAuB,CCGT,CAAA,CCPnB,CFIK,ACGe,CCPpC,AFIY;AEHZ,ALPA,AEeQ,ACJI,ACE0B,CJbtC,EAAA,GKOM,AFIM,CEJL,CFIO,CDIW,ACJV,IDIU,EAAA,AEFa,CAAC,CAAC,CFEf,ACJb,CDIa,EAAA,ACJE,ACEW,EDFT,CEJ7B,AFI8B,CEJL,CDMwB,EAAE,CAAC,EDFzB,EAAf,CEJZ,KHQyB,AEFwB,EAAX,CFEb,gBAAjB,EAAiB,EAAA,GAAA,kBAAA,CAAA,MAAjB,EAAiB,EAAA,EAAjB,EAAkC;AGN1C,ANII,AEMA,ACJS,ACHD,ACCoD,ELA5D,AEMA,EIVA,GDIiB,CLAjB,CAAA,AKA8D,CFE/C,ACHH,EDGK,CDIjB,CAAA,CCJiB,ACHA,ACCV,GLAP,AIDoB,CJCpB,IMJmB,AJUnB,CAAA,EIVsB,AFGM,CAAC,GEHH,GJU1B,ACJiB,CAAA,EDIjB,ACJiB,CAAR,CHFT,EIDoB,CJCpB,AID2C,IAAvB,CAAZ,CEHkB,CAAA,AJU1B,GFNoB,GAApB,EAAkC,OMJZ,EAA1B;AACA,ANIQ,ACdK,ACoBL,AEPI,MEHN,CAAC,ALVM,CDcD,ACdC,EGaG,CJCD,AEMA,GFNG,EEME,CDpBP,EDcU,CCdV,CGac,CFOnB,EIVR,AFG8B,CEHL,GNIP,CAAe,ACdpB,GGayB,CAAC,GJCrB,CAAuB,GAAvB,CAAV,GMJR,EFG8B,CAAuB,GAAvB,CAAlB;AEDZ,AJSK,ACLO,ACFA,ACAD,GHKP,CIPA,EFEQ,IDEI,AEFF,CDAG,CDEC,ACFA,ACAF,CFEG,IEFE,CAAV,ECFS,AHIJ,AEFO,CDAX,EEFW,CFEQ,EAAE,CEFN,AHIM,ACFC,ODEtB,ACFmB,EDEU,KCFO,KEFrB,CAAA,EFEG,GAA4B,QAA5B,GEFP,AFE4C,EEFnE,KFEY;AEDZ,ANEQ,AGEQ,ACFJ,ACAG,MCFT,AFEM,CEFL,CNEK,AGEI,EAAE,CHFH,AIAE,CAAC,ACAC,ILAC,AKAG,CLAF,CAAb,CKAkB,CLAH,CIAX,GEFZ,AFE+B,CEFN,CFEQ,CAAC,OAAH,EAAnB,KEFZ;AAEA,ANCY,AEOR,ACLS,ACFD,ACAO,EHOf,EIRA,EFCQ,CDAA,GEAO,CLAF,EEOb,ACLc,CDKd,AGPmB,EAAG,CDAH,CAAC,ACAI,CAAC,CLAjB,CAAe,CMDL,CJQlB,CAAA,CIRqB,ENCb,AIAA,CJAsB,CMDL,ADCH,CDAU,CJAxB,AKDc,CDCY,CJAC,AEOnC,AEPmC,CJA3B,EEOR,YAAA,AEPgC,EAAxB,GEDiB,CAAA,kBAAJ,EAAzB;AACA,ANCS,AEOD,ACLQ,ACFJ,ACAO,MCDb,AFCM,CEDL,CHGS,ACFF,CAAC,CDEG,AEFC,CHOJ,IEPH,ACAY,CHOJ,AEPE,CCAM,EAAE,CAAC,CDAnB,CFOJ,EIRR,CAAyB,EDCG,OAAe,OAAhB,ECD3B,CDCoD,EAAE,CAAC,SAAH,EAAzB,GAAwC,CAFzC;ACG1B,ANAK,AEOA,ACLQ,ACFD,ACAO,GLLf,AEUA,CILE,EFAM,EAAE,CAAC,CCAI,KDAP,CAAU,ACAG,EAAI,CCAR,CDAU,CAAC,CCAR,KFAZ,CCAiB,ECAG,CAAC,IDAW,QAAhB,CCAJ,CAAuB,CDAO,EAAE,CAAC,SAAH,EAA1B,GAAyC,CCA7C,CAAxB;AAEA,AHCS,ACFG,ACJc,SAAX,EDIE,IECF,CAAC,MFDJ,CAAiB,MAAjB,CAAwB,EECpC,AFDY,CECqB,QAAjC,EAA2C,UAAC,CAAD,EAAU;AACjD,ANFA,AEQA,AEPK,ACAM,ECCX,ANFA,AEQA,CINC,CAAC,INFF,AKCW,CLDX,IEQA,CAAA,AGPiB,CAAC,GCClB,ANFA,CAAA,AKCW,CAAY,GHOvB,CAAA,AGPW,ULDX,AEQA,GFRA,AEQA,YFRA,AEQA;AILA,ANFI,AEQA,ACLA,ACDH,ACDO,GDfR,GEgBM,CDRC,ELMkB,AGGhB,CGDC,CJMC,EINE,ANFY,AKEb,ELFa,CEQT,EFRS,CAAA,EMEJ,ANFI,CMEH,CNFG,AEQrB,GFRqB,EGGrB,CAAyB,EHHC,IMEjB,CAAuB,EHChC,EHHA,CGGqC,CHHhB,CMEZ,AHC8B,CGD3C,ANFyB,AGGmB,GHHnB,EAAA,CAAA,EGGgB,EAArC,EHHA,EAAqB,EAAA,EAArB,EAAoC;AMGxC,ANHQ,AESP,ACLG,AEDO,GHIX,GIJM,GHCG,CHJK,EMGF,ADAG,GCAA,ADAG,ELHG,CKGA,ELHA,EAAA,CMGE,ANHF,CMGG,ADAG,CLHN,AKGO,CLHpB,GGIJ,CAA0B,IEDT,CAAiB,ECAvB,CAAuB,CHClC,GAAsC,EAAE,CAAC,AEDP,ECAvB,CAAf,ADAsC,EAAG,GFCC,EAAtC;AGAJ,ANHQ,AGIP,ACDL,ACDiD,GFb7C,GGcM,ANHE,GIGZ,GEAgB,CNHG,CAAC,CMGD,EDD8B,GAAG,CAAC,ECC1B,CAAC,AFA5B,CCDiD,ILFrC,CAAwB,AKE0B,EAAE,CAAC,CLFrD,GMGO,CAAuB,KDDoB,EAAb,ECC9B,CAAf;AACA,ANHK,AESL,AE/BJ,ACuB6E,CDvB7E,CF+BI,CE/BJ,GEyBU,GDFe,CAAV,GCEE,AJMb,CAAA,EINgB,OJMhB,CINwB,AJMxB,CINyB,aAAT,CAAuB,AJMvC,GAAA,GINgB,CAAhB,QJMA;AILA,ANHC,AESG,ACNR,GHPI,GMOM,GHAV,EDMe,GAAA,MINS,AJMT,CAAG,EINS,EHA3B,CDMuB,CINQ,KJMhB,EAAc,MINE,CAAA,GJMhB,EAAc,MINF,AJMZ,CILP,AJKiC,IIL7B,CAAC,AJKiC,IAAL,CINd,EAEnB,EJI+C,IIJzC,CAAC,GJIyB,GAAyB,OINtC,EAGnB,AJGgC,GAAmC,GIH7D,CAAC,KAHY,AJMZ,EIFP,AJE4E,OIFrE,AJEA,CIFC,CJEoE,IINzD,CAAvB,CJMW,CAA6E,KAAK,OAAlF,EAAyF,cAAzF,EAAyF,MAAzF,CAAqG,KAAK,MAA1G,CAAP;AICJ,AJAC,ACjCL,ACAa,ACwBE,CFxBf,CGiCI,CJFA,AC/BJ,ICAa,CEiCH,AFjCG,CEiCF,GDTQ,EAAE,CAAC,OAAH,CCSf,AFjCS,CEiCa,EFjCb,GCwBuB,OAArB,ECSX,ADTwC,GDxB/B;AEmCZ,ANXU,AKCK,CCLhB,CNIW,EM0BX,IN1BW,CAAA,CKCK,MAAM,CAAC,CLDZ,CAAA,CKCW,CAAN,CAAY,KLDjB,AKCK,GLDZ,CKCiC,EAAE,CAAC,QLDpC,CKCiC,EAArB;AC2BhB,AN3BQ,AESR,AClCa,AE0BG,OF1BH,CAAA,CDkCb,AGVe,ELCA,IKCK,CLDA,IESpB,CFTQ,GGzBK,GAAA,gBAAA;AGqDb,AN3BK,AE7BL,AG8BgB,CH9BhB,EF2BW,AE3BX,OG8BgB,MAAM,CAAC,GAAD,CAAN,CAAY,MAAZ,IAAsB,EAAE,CAAC,SAAH,EAAtB;AC2BhB,AD1BgB;AC2BhB,AN5BW,AE9BE,AGgCD,ELFD,KE9BE,CF8BF,AE9BE,CF8BF,SAAA,CAAA,AE9BE,GAAA,WAAA,CF8BF,GAAP,YAAA;AM6BJ,AN5BQ,WAAO,KAAK,YAAZ;AM+BR,AN9BK,GAFM;AMiCX,ADhDQ,SAAiB,IAAA,EAAA,GAAA,CAAA,EAAA,cAAA,GAAA,YAAjB,EAAiB,EAAA,GAAA,cAAA,CAAA,MAAjB,EAAiB,EAAA,EAAjB,EAA6B;ACkDrC,ANhCW,AKlBE,ELkBF,MAAA,CAAA,CKlBQ,EAAE,GAAA,GLkBV,CAAA,UKlBU,CAAA,EAAA,CLkBV,AKlBE,GLkBT,UAAsB,EAAtB,EAAoC;AMiCxC,ANhCQ,SAAK,YAAL,CAAkB,IAAlB,CAAuB,EAAvB;AMkCR,cDrDmB;ACsDnB,ANlCQ,AKFC,QLEG,EAAE,CAAC,OAAH,OAAiB,QAArB,EAA+B;AMmCvC,ANlCY,WAAK,KAAL,IAAc,EAAE,CAAC,SAAH,EAAd;AACH,AKFD,KLAA,IKAK,ELEE,WKFP,CAAmB,SAAnB,GAA+B,oPAA/B;ALGI,WAAK,KAAL,IAAc,EAAE,CAAC,SAAH,EAAd;AACH,AKCD,SAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,QAAA,GAAA,MAAlB,EAAkB,EAAA,GAAA,QAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAyB;AAApB,UAAM,GAAG,GAAA,QAAA,CAAA,EAAA,CAAT;ALAL,AKCI,SLDC,CKCG,MAAM,GAAG,KLDjB,GKCyB,CAAC,aAAT,CAAuB,IAAvB,CAAb;ALAP,AKCO,GLTD,OKSK,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAf;AACA,UAAI,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAd;ALDZ,AKEY,MAAA,GLFZ,GKEkB,CAAC,ELFnB,OKEY,GAAmB,GAAG,CAAC,IAAvB;ALvCZ,AKwCY,CLxCZ,EAAA,GKwCY,OAAO,CAAC,SAAR,GAAoB,GAAG,CAAC,KAAJ,CAAU,QAAV,EAApB;AACA,MAAA,QAAQ,CAAC,SAAT,GAAqB,GAAG,CAAC,MAAJ,CAAW,QAAX,EAArB;ALzCC,AK0CD,OL1CC,CAAA,EK0CG,EAAE,EL1CL,CK0CQ,EL1CR,MAAA,AK0CgB,CAAC,aAAT,CAAuB,IAAvB,CAAT;AACA,MAAA,EAAE,CAAC,MAAH,CAAU,MAAV;AACA,MAAA,EAAE,CAAC,MAAH,CAAU,QAAV;AACA,MAAA,EAAE,CAAC,MAAH,CAAU,OAAV;AACA,WAAK,aAAL,CAAmB,MAAnB,CAA0B,EAA1B;AACH;AAEJ,GA1CD;;AA4CJ,SAAA,kBAAA;AArDA,CAAA,EAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA","file":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["import { IObserver } from \"../interfaces/IObserver\";\r\nimport { ISubject } from \"../interfaces/ISubject\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\n\r\nexport class Caisse implements ISubject{\r\n    private solde : number = 0;\r\n    private transactions : any[] = [];\r\n    \r\n    private observers : IObserver[] = [];\r\n    \r\n    \r\n    subscribeObserver(obs: IObserver): void {\r\n        this.observers.push(obs)\r\n        obs.getNotification(this)\r\n    }\r\n    unsubscribeObserver(obs: IObserver): void {\r\n        let idx = this.observers.indexOf(obs);\r\n        if (idx !== -1){\r\n            this.observers.splice(idx, 1);\r\n        }\r\n    }\r\n    notifyObservers(): void {\r\n        for(const element of this.observers){\r\n            element.getNotification(this)\r\n        }\r\n    }\r\n    public getSolde(){\r\n        return this.solde\r\n    }\r\n    public getTransactions(){\r\n        return this.transactions\r\n    }\r\n    public addTransaction(tr:Transaction){\r\n        this.transactions.push(tr)\r\n        if (tr.getType() === 'credit') {\r\n            this.solde += tr.getAmount()\r\n        } else {\r\n            this.solde -= tr.getAmount()\r\n        }\r\n        this.notifyObservers()\r\n    }\r\n}","import { IObserver } from \"../interfaces/IObserver\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class SoldeView implements IObserver{\r\n    \r\n    private htmlSoldeView : HTMLHeadingElement\r\n    \r\n    constructor(){\r\n        this.htmlSoldeView = document.querySelector('#solde-view')\r\n    }\r\n    \r\n        \r\n    getNotification(caisse: Caisse): void {\r\n        console.log(`SoldeView notifi√© par le nouveau solde ${caisse.getSolde()}`);\r\n        \r\n        this.htmlSoldeView.innerText = caisse.getSolde().toString()\r\n    }\r\n}","export class Transaction {\r\n    private type : string\r\n    private amount : number\r\n    private reason : string\r\n    private byWhome :string\r\n    \r\n    constructor(\r\n        _type : string,\r\n        _amount : number,\r\n        _reason : string,\r\n        _byWhome : string,\r\n    ){\r\n        this.type = _type\r\n        this.amount = _amount\r\n        this.reason = _reason\r\n        this.byWhome = _byWhome\r\n    }\r\n    \r\n    getType(){\r\n        return this.type\r\n    }\r\n      \r\n    getAmount(){\r\n        return this.amount\r\n    }\r\n      \r\n    getReason(){\r\n        return this.reason\r\n    }\r\n      \r\n    getByWhome(){\r\n        return this.byWhome\r\n    }\r\n    \r\n    transactionText (){\r\n        return `${this.amount} dinars ${(this.type === 'credit')?'d√©pos√©s':'retir√©s'} par ${this.byWhome} suite √† ${this.reason}`\r\n    }\r\n}","import { IObserver } from \"../interfaces/IObserver\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class TransationCompte implements IObserver{\r\n    \r\n    private htmlDebitCompteView : HTMLTableCellElement\r\n    private htmlCreditCompteView : HTMLTableCellElement\r\n    \r\n    constructor(){\r\n       this.htmlDebitCompteView = document.querySelector(\"#debit-compte\")!\r\n       this.htmlCreditCompteView = document.querySelector(\"#credit-compte\")!\r\n    }\r\n    \r\n    getNotification(caisse: Caisse): void {\r\n        \r\n        let transactionArray = caisse.getTransactions()\r\n        let DC = 0\r\n        let CC = 0\r\n        for (const tr of transactionArray){\r\n            if (tr.getType() === 'debit'){\r\n                DC++\r\n            }else {\r\n                CC++\r\n            }\r\n        }\r\n        \r\n        this.htmlDebitCompteView.innerText = DC.toString()\r\n        this.htmlCreditCompteView.innerText = CC.toString()\r\n    }\r\n}","import { IObserver } from \"../interfaces/IObserver\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class TransactionList implements IObserver{\r\n    \r\n    private ulContainer : HTMLUListElement\r\n    constructor(){\r\n        this.ulContainer = document.querySelector('#transaction-list')!\r\n    }\r\n    getNotification(caisse: Caisse): void {\r\n        \r\n        this.ulContainer.innerHTML= \"\"\r\n        for (const tr of caisse.getTransactions()){\r\n            let li = document.createElement(\"li\")\r\n            li.className = tr.getType()\r\n            let title = document.createElement(\"h4\")\r\n            let description = document.createElement(\"p\")\r\n            title.innerText = (tr.getType() === 'credit')?'Cr√©dit':'D√©bit'\r\n            title.className =  tr.getType()\r\n            description.innerText = tr.transactionText()\r\n            li.append(title)\r\n            li.append(description)\r\n            this.ulContainer.append(li)\r\n        }\r\n        \r\n    }\r\n    \r\n}","import { IObserver } from \"../interfaces/IObserver\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class TransactionParUser implements IObserver{\r\n    \r\n    private htmlContainer : HTMLTableElement\r\n    \r\n    constructor(){\r\n        this.htmlContainer = document.querySelector(\"#transactions-par-user\")!\r\n        \r\n    }\r\n    \r\n    getNotification(caisse: Caisse): void {\r\n        let transactions = caisse.getTransactions()\r\n        let result = []\r\n        for (const tr of transactions){\r\n           let nb =  result.filter(e=>e.name === tr.getByWhome()).length\r\n           if(nb === 0){\r\n               let user = {\r\n                   name : tr.getByWhome(),\r\n                   debit : (tr.getType()===\"debit\")?tr.getAmount():0,\r\n                   credit : (tr.getType()===\"credit\")?tr.getAmount():0\r\n               }\r\n               result.push(user)\r\n           }\r\n           else {\r\n               let idx = result.findIndex(elm => elm.name === tr.getByWhome())\r\n               if (tr.getType() === 'debit'){\r\n                result[idx].debit += tr.getAmount()\r\n               }else{\r\n                result[idx].credit += tr.getAmount()\r\n               }\r\n           }\r\n        }\r\n        \r\n        this.htmlContainer.innerHTML = `<tr>\r\n                                            <td>Personnel</td>\r\n                                            <td>Cr√©dit</td>\r\n                                            <td>D√©bit</td>\r\n                                        </tr>`\r\n        for (const res of result){\r\n            let nameTd = document.createElement('td')\r\n            let creditTd = document.createElement('td')\r\n            let debitTd = document.createElement('td')\r\n            nameTd.innerText = res.name\r\n            debitTd.innerText = res.debit.toString()\r\n            creditTd.innerText = res.credit.toString()\r\n            let tr = document.createElement('tr')\r\n            tr.append(nameTd)\r\n            tr.append(creditTd)\r\n            tr.append(debitTd)\r\n            this.htmlContainer.append(tr)\r\n        }\r\n        \r\n    }\r\n    \r\n}","import { Caisse } from \"./classes/Caisse\";\r\nimport { SoldeView } from \"./classes/SoldeView\";\r\nimport { Transaction } from \"./classes/Transaction\";\r\nimport { TransationCompte } from \"./classes/TransactionCompte\";\r\nimport { TransactionList } from \"./classes/TransactionList\";\r\nimport { TransactionParUser } from \"./classes/transactionParUserView\";\r\n\r\nlet caisse = new Caisse();\r\n\r\nlet soldeView = new SoldeView();\r\ncaisse.subscribeObserver(soldeView)\r\n\r\nlet transactionListView = new TransactionList();\r\ncaisse.subscribeObserver(transactionListView)\r\n\r\nlet transationCompte = new TransationCompte();\r\ncaisse.subscribeObserver(transationCompte)\r\n\r\nlet transactionParUser = new TransactionParUser();\r\ncaisse.subscribeObserver(transactionParUser)\r\n\r\nconst transactionForm = document.querySelector('#transaction-form')! as HTMLFormElement\r\n\r\ntransactionForm.addEventListener(\"submit\", (e : Event) => {\r\n    e.preventDefault();\r\n    const type = document.querySelector(\"#type\") as HTMLSelectElement\r\n    const amount = document.querySelector(\"#amount\") as HTMLInputElement\r\n    const reason = document.querySelector(\"#reason\") as HTMLInputElement\r\n    const byWhome = document.querySelector(\"#who\") as HTMLInputElement\r\n    const uneTransaction = new Transaction(\r\n        type.value,\r\n        amount.valueAsNumber,\r\n        reason.value,\r\n        byWhome.value\r\n    )\r\n    \r\n    caisse.addTransaction(uneTransaction)\r\n    \r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const from = document.querySelector(\".transaction-form\") as HTMLFormElement;\r\n\r\n// //inputs\r\n// const type = document.querySelector(\"#type\") as HTMLInputElement;\r\n// const who = document.querySelector(\"#who\") as HTMLInputElement;\r\n// const reason = document.querySelector(\"#reason\") as HTMLInputElement;\r\n// const amount = document.querySelector(\"#amount\") as HTMLInputElement;\r\n\r\n\r\n// // list template instance\r\n// const ul = document.querySelector(\"ul\")!;\r\n\r\n// from.addEventListener(\"submit\", (e: Event) => {\r\n//     e.preventDefault();\r\n    \r\n//     const li = document.createElement(\"li\");\r\n//     li.className\r\n// }) \r\n\r\n"]}